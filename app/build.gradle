apply plugin: 'com.android.application'

def appManifest = [
        applicationId: "biz.playr",
        name: 'Playr', // The name shown on the Android Launcher.
        versionName: "2.9.8",
        versionCode: 47,
        themeColor: '#303F9F', // The color used for the status bar.
        navigationColor: '#303F9F', // The color used for the navigation bar.
        backgroundColor: '#bababa', // The color used for the splash screen background.
        enableNotifications: false, // Set to true to enable notification delegation.
        // Add shortcuts for your app here. Every shortcut must include the following fields:
        // - name: String that will show up in the shortcut.
        // - short_name: Shorter string used if |name| is too long.
        // - url: Absolute path of the URL to launch the app with (e.g '/create').
        // - icon: Name of the resource in the drawable folder to use as an icon.
        shortcuts: [
                // Insert shortcuts here, for example:
                // [name: 'Open SVG', short_name: 'Open', url: '/open', icon: 'splash']
        ],
        // The duration of fade out animation in milliseconds to be played when removing splash screen.
        splashScreenFadeOutDuration: 300
]

def twaManifest = [
        hostName: 'www.playr.biz', // The domain being opened in the TWA.
        launchUrl: '/play', // The start path for the TWA. Must be relative to the domain.
]

allprojects {
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

android {
    compileSdk 34
    namespace 'biz.playr'

    defaultConfig {
        applicationId appManifest.applicationId
        versionCode appManifest.versionCode
        versionName appManifest.versionName
        minSdkVersion 19
        targetSdkVersion 34

        // The name for the application on the Android Launcher
        resValue "string", "appName", appManifest.name

        // The name for the application on the Android Launcher
        resValue "string", "versionName", appManifest.versionName

        // The URL that will be used when launching the TWA from the Android Launcher
        def launchUrl = "http://" + twaManifest.hostName + twaManifest.launchUrl + "?app_version=" + appManifest.versionName
        resValue "string", "launchUrl", launchUrl

        // The URL that will be opened as a Desktop PWA when the TWA is installed and
        // run on ChromeOS. This will probably give a better user experience for non-mobile
        // devices, but will not include any native Android interaction.
        resValue "string", "crosLaunchUrl", launchUrl

        // The hostname is used when building the intent-filter, so the TWA is able to
        // handle Intents to open the launchUrl
        resValue "string", "hostName", twaManifest.hostName

        // This variable below expresses the relationship between the app and the site,
        // as documented in the TWA documentation at
        // https://developers.google.com/web/updates/2017/10/using-twa#set_up_digital_asset_links_in_an_android_app
        // and is injected into the AndroidManifest.xml
        resValue "string", "assetStatements", """
            [{
                "relation": ["delegate_permission/common.handle_all_urls"],
                "target": {
                    "namespace": "web",
                    "site": "http://$twaManifest.hostName"
                }
            }]"""
        // To get the .well-known/assetlinks.json set up so this app can be verified (and the URL bar is removed)
        // see: https://developers.google.com/digital-asset-links/v1/getting-started
        // and: https://developers.google.com/web/android/trusted-web-activity/integration-guide

        // This attribute sets the status bar color for the TWA. It can be either set here or in
        // `res/values/colors.xml`. Setting in both places is an error and the app will not
        // compile. If not set, the status bar color defaults to #FFFFFF - white.
//        resValue "color", "colorPrimary", appManifest.themeColor

        // This attribute sets the navigation bar color for the TWA. It can be either set here or in
        // `res/values/colors.xml`. Setting in both places is an error and the app will not
        // compile. If not set, the navigation bar color defaults to #FFFFFF - white.
//        resValue "color", "navigationColor", appManifest.navigationColor

        // Sets the color for the background used for the splash screen when launching the
        // Trusted Web Activity.
//        resValue "color", "backgroundColor", appManifest.backgroundColor

        // Defines a provider authority fot the Splash Screen
//        resValue "string", "providerAuthority", appManifest.applicationId + '.fileprovider'

        // The enableNotification resource is used to enable or disable the
        // TrustedWebActivityService, by changing the android:enabled and android:exported
        // attributes
//        resValue "bool", "enableNotification", appManifest.enableNotifications.toString()

//        appManifest.shortcuts.eachWithIndex { shortcut, index ->
//            resValue "string", "shortcut_name_$index", "$shortcut.name"
//            resValue "string", "shortcut_short_name_$index", "$shortcut.short_name"
//        }

        // The splashScreenFadeOutDuration resource is used to set the duration of fade out animation in milliseconds
        // to be played when removing splash screen. The default is 0 (no animation).
//        resValue "integer", "splashScreenFadeOutDuration", appManifest.splashScreenFadeOutDuration.toString()

    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            resValue "bool", "auto_start", "true"
            resValue "bool", "restart", "true"
        }
        releaseProDisplay {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            resValue "bool", "auto_start", "false"
            resValue "bool", "restart", "false"
            resValue "string", "appName", appManifest.name + "ForProDisplay"
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            jniDebuggable true
            renderscriptDebuggable true
            renderscriptOptimLevel 3
            signingConfig signingConfigs.debug
            resValue "bool", "auto_start", "false"
            resValue "bool", "restart", "false"
            resValue "string", "appName", appManifest.name + "ForDebugDisplay"
        }
    }
    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.leanback:leanback:1.0.0'
    // recyclerview 1.4.0 has min SDK version 21, version 1.3.2 seems newest with support for API level 19
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    // webkit 1.12.1 has min SDK version 21, version 1.11.0 seems newest with support for API level 19
    implementation 'androidx.webkit:webkit:1.11.0'
//    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.preference:preference:1.2.1'
    // webkit 1.15.0 has min SDK version 21, version 1.13.1 seems newest with support for API level 19
//    implementation 'androidx.core:core:1.13.1'

    // From TwaDemoJava demo project (also including maven
    // in the build.gradle in the /gradle folder to enable
    // inclusion of code from GitHub)
    // appcompat 1.7.0 has min SDK version 21, version 1.6.1 seems newest with support for API level 19
    implementation 'androidx.appcompat:appcompat:1.6.1'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    implementation 'com.google.android.material:material:1.1.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // GITHUB customtabs version
//    implementation 'com.github.GoogleChrome.custom-tabs-client:customtabs:d08e93fce3fb3e1f22214ee2f23fddc4f4e92634'
    implementation 'com.github.GoogleChrome.custom-tabs-client:customtabs:master'
//    implementation 'androidx.browser:browser:1.3.0'
}
